#!/bin/sh -e
# Start User Application

export XDG_RUNTIME_DIR=${XDG_RUNTIME_DIR:-/var/run}
PATH="/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin"

# Load default env variables from profiles(e.g. /etc/profile.d/weston.sh)
. /etc/profile

# Function to check if a process is running
check_process()
{
    pgrep -x "$1" >/dev/null
    return $?
}

# Function to wait for process to start
wait_for_process()
{
    local process_name=$1
    local max_attempts=30  # Maximum number of attempts (30 * 0.1 = 3 seconds)
    local attempt=1

    while [ $attempt -le $max_attempts ]; do
        if check_process "$process_name"; then
            return 0
        fi
        sleep 0.1
        attempt=$((attempt + 1))
    done
    return 1
}

start_user_app()
{
	# Reset GPS
	echo 141 > /sys/class/gpio/export
	echo out > /sys/class/gpio/gpio141/direction
	echo 1 > /sys/class/gpio/gpio141/value
	echo 0 > /sys/class/gpio/gpio141/value
	echo 1 > /sys/class/gpio/gpio141/value

	# USB RNDIS
	ifconfig usb0 up
	ifconfig usb0 169.254.43.1 netmask 255.255.0.0 up

    # litelog
	/root/app/litelog/litelog &
    if wait_for_process "litelog"; then
        echo "litelog Start Success."
    else
        echo "litelog Start Fail."
    fi

    # mosquitto for MQTT
	/root/app/mqtt/bin/mosquitto &
    if wait_for_process "mosquitto"; then
        echo "mosquitto Start Success."
    else
        echo "mosquitto Start Fail."
    fi

    # # UI
	# /root/app/ui/ui &
    # if wait_for_process "ui"; then
    #     echo "ui Start Success."
    # else
    #     echo "ui Start Fail."
    # fi
}

start_weston()
{
	if [ -f "/usr/libexec/weston-desktop-shell" ]; then
    	rm "/usr/libexec/weston-desktop-shell" || echo "Failed to remove weston-desktop-shell"
	else
		echo "Info: weston-desktop-shell does not exist"
	fi

	# 1. Check and kill ui_key if exists
	if check_process "ui_key"; then
		echo "Stopping ui_key..."
		killall ui_key
		sleep 0.5  # Give some time for ui_key to clean up
	fi

	# 2. Check and kill weston if exists
	if check_process "weston"; then
		echo "Stopping weston..."
		killall weston
		
		# 3. Wait for weston to completely stop
		while check_process "weston"; do
			sleep 0.1
		done
		echo "Weston stopped"
	fi

	# 4. Start weston in background
	echo "Starting weston..."
	weston &

	# 5. Wait for weston to fully start
	if wait_for_process "weston"; then
		echo "Weston started successfully"
		
		# Additional wait to ensure weston is fully initialized
		sleep 1
		
		# 6. Start User Application
		echo "Starting ui..."
		start_user_app
	else
		echo "Error: Weston failed to start"
		exit 1
	fi

	echo "All processes started successfully"
}

stop_weston()
{
	killall weston
}

case "$1" in
	start)
		echo -n "starting weston... "
		start_weston
		echo "done."
		;;
	stop)
		echo -n "stoping weston... "
		stop_weston || true
		echo "done."
		;;
	restart|reload)
		echo -n "stoping weston... "
		stop_weston && sleep .3
		echo "done."

		echo -n "starting weston... "
		start_weston
		echo "done."
		;;
	*)
		echo "Usage: $0 {start|stop|restart}"
		exit 1
esac

exit 0
